// problem: 1448.Count good nodes in a binary tree.

//https://leetcode.com/problems/count-good-nodes-in-binary-tree/description/?envType=study-plan-v2&envId=leetcode-75


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
void count(TreeNode* root,int maxi,int &ans){
    if(root==NULL){
        return;
    }
    if(root->val>=maxi){
          ans++;
          cout<<root->val<<" ";
    }
    maxi=max(root->val,maxi);
    count(root->left,maxi,ans);
    count(root->right,maxi,ans);


}
    int goodNodes(TreeNode* root) {
        int ans=0;
       
       if(!root->left&&!root->right) return 1;

        count(root,INT_MIN,ans);

      return ans;
    }
};
