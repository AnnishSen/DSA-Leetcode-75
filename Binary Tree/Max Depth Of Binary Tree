
// problem : 104.Given the root of a binary tree, return its maximum depth.
//https://leetcode.com/problems/maximum-depth-of-binary-tree/description/?envType=study-plan-v2&envId=leetcode-75


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

int find(TreeNode*root,int &maxDepth,int newDepth)
{
    if(root==NULL)
    {
        return newDepth;
    }
    newDepth++;
    if(root->left==NULL && root->right == NULL)
    {
        maxDepth=max(newDepth,maxDepth);
    }
    find(root->left,maxDepth,newDepth);
    find(root->right,maxDepth,newDepth);
    return maxDepth;
}
    int maxDepth(TreeNode* root) {
        if(root==NULL)
        {
            return 0;
        }
        int maxDepth=INT_MIN;
        int newDepth=0;

          find(root,maxDepth,newDepth);

          return maxDepth;
    }
};
