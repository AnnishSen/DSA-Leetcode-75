// problrm: 1372.Longest zig zag path in a binary tree.


//https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree/?envType=study-plan-v2&envId=leetcode-75




/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
void count(TreeNode* root,int &maxLength,bool left,bool right,int cnt){

    if(root->left==NULL&&root->right==NULL){
         maxLength=max(cnt,maxLength);
         return ;
    }
    if(root->left){
        if(left==true){ 
             count(root->left,maxLength,false,true,cnt+1);
         }else {
            maxLength=max(cnt,maxLength);
            count(root->left,maxLength,false,true,1);
         }
    }
    if(root->right){
        if(right==true) {
          count(root->right,maxLength,true,false,cnt+1);
        }else {
            maxLength=max(cnt,maxLength);
             count(root->right,maxLength,true,false,1);
        }
    }
}
    int longestZigZag(TreeNode* root) {

        int maxLength=0;
        count(root,maxLength,true,true,0);
       return maxLength; 
    }
};
